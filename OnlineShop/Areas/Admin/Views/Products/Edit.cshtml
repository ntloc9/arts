@model OnlineShop.Models.Product

@{
    ViewBag.Title = "Edit";
}
<style>
    input#ImageName {
        display: none;
    }
</style>



@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Product_id)

        <div class="col-12 grid-margin">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Edit Product</h4>
                    <p class="card-description"></p>
                    <form class="form-sample">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Brand</label>
                                    <div class="col-sm-9">
                                        @Html.DropDownList("Brand_id", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Brand_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Category</label>
                                    <div class="col-sm-9">
                                        @Html.DropDownList("Cate_id", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Cate_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Name</label>
                                    <div class="col-sm-9">
                                        @Html.EditorFor(model => model.Product_name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Product_name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Price</label>
                                    <div class="col-sm-9">
                                        <button type="button" class="btn btn-inverse-success btn-icon">
                                            <i class="mdi mdi-cash-usd" style="font-size:27px"></i>
                                        </button>
                                        <input class="form-control text-box" style="width:85%; display:inline" data-val="true" data-val-number="The field Price must be a number." data-val-required="The Price field is required." id="Price" name="Price" type="text" value="@Model.Price">
                                        @*<input type="text" class="form-control" value="@Model.Price">*@

                                        @*@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label">Quantity</label>
                                    <div class="col-sm-9">
                                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label" style="padding-right:10px">Date created</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(model => model.Date_created, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.Date_created, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 col-form-label" style="padding-right:10px">Product Code</label>
                                    <div class="col-sm-9">
                                        @Html.EditorFor(model => model.Product_code, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Product_code, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <p class="card-description">
                            Optional
                        </p>
                        <div class="form-group">
                            <label for="exampleTextarea1">Detail</label>
                            <textarea class="form-control" id="exampleTextarea1" rows="4">@Model.Detail</textarea>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" for="HasSidebar">Image Name</label>
                            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                            <div>
                                <img style="margin:20px 0" src="/Images/Uploads/Products/@Model.Product_id/Thumbs/@Model.Image" />
                                <br /><br />
                                <img style="margin:20px 0" id="imgpreview" src="#" />
                                <br /><br />
                                <div class="col-md-10">
                                    <input type="file" name="file" id="ImageUpload" />
                                </div>
                            </div>
                        </div>


                        @*<button type="submit" class="btn btn-gradient-primary mr-2">Submit</button>*@
                        <input type="submit" value="Save" class="btn btn-gradient-primary mr-2" />
                    </form>
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(function () {

        /*
        * Preview selected image
        */

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $("img#imgpreview")
                        .attr("src", e.target.result)
                        .width(200)
                        .height(200);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#ImageUpload").change(function () {
            readURL(this);
        });
    }
</script>